name: Mirror Server to Private Repo

on:
  push:
    branches:
      - main

jobs:
  sync_graphic:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Server Repository
      uses: actions/checkout@v3

    - name: Trigger Jenkins Build
      env:
        JENKINS_URL: ${{ secrets.JENKINS_URL }}
        JENKINS_USER: ${{ secrets.JENKINS_USER }}
        JENKINS_PASSWORD: ${{ secrets.JENKINS_PASSWORD }}
        JENKINS_JOB_NAME: "job/Zappy/job/Graphic/job/Build_all/"
      run: |        
        crumb=$(curl -v GET https://potatgangcorp.fr/jenkins/crumbIssuer/api/json --user ${JENKINS_USER}:${JENKINS_PASSWORD})
        build_url=$(curl -X POST "https://potatgangcorp.fr/${JENKINS_JOB_NAME}build" --user ${JENKINS_USER}:${JENKINS_PASSWORD} -H "'Jenkins-Crumb: $crumb'")

        queue_url=$(echo $build_url | sed 's,/queue/.*,/queue/,')

        while true; do
          build_info=$(curl --user ${JENKINS_USER}:${JENKINS_PASSWORD} --silent "$queue_url/api/json")
          build_number=$(echo $build_info | jq -r '.executable.number')

          if [ "$build_number" != "null" ]; then
            echo "Jenkins build number: $build_number"
            break
          fi

          echo "Waiting for Jenkins build to start..."
          sleep 10
        done
        echo "BONJOUR..."
        while true; do
          build_status=$(curl --user ${JENKINS_USER}:${JENKINS_PASSWORD} --silent "${JENKINS_URL}/job/${JENKINS_JOB_NAME}/${build_number}/api/json" | jq -r '.result')

          if [ "$build_status" != "null" ]; then
            echo "Jenkins build status: $build_status"
            break
          fi

          echo "Waiting for Jenkins build to complete..."
          sleep 10
        done

        if [ "$build_status" != "SUCCESS" ]; then
          echo "Jenkins build failed"
          exit 1
        fi

    - name: Sync with Private Repository
      env:
        SSH_PRIVATE_KEY: ${{ secrets.POTAT_KEY }}
      run: |
        git config --global user.email "mathis.gheri@epitech.eu"
        git config --global user.name "MathisGheri"
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

        # Clone the private repo
        git clone --depth 1 git@github.com:Potat-Gang-Corp/Zappy.git private-repo

        # Ensure the destination directory exists
        mkdir -p private-repo/Graphic

        # Copy server files to the Server directory in the private repo
        rsync -av --delete --exclude '.git' --exclude 'private-repo' --exclude '.github' . private-repo/Graphic/

        cd private-repo
        git add Graphic/
        git commit -m "[+] Sync Graphic repository with the final one"
        git push origin main