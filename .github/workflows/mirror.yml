name: Mirror Server to Private Repo

on:
  push:
    branches:
      - main

jobs:
  sync_graphic:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Server Repository
      uses: actions/checkout@v3

    - name: Trigger Jenkins Build
      env:
        JENKINS_URL: ${{ secrets.JENKINS_URL }}
        JENKINS_USER: ${{ secrets.JENKINS_USER }}
        JENKINS_PASSWORD: ${{ secrets.JENKINS_PASSWORD }}
        JENKINS_JOB_NAME: "jenkins/job/Zappy/job/Graphic/job/Build_all/"
      run: |
        crumb_response=$(curl -s "https://potatgangcorp.fr/jenkins/crumbIssuer/api/json" --user ${JENKINS_USER}:${JENKINS_PASSWORD})
        crumb=$(echo $crumb_response | jq -r '.crumb')
        echo "Obtained Jenkins crumb: $crumb"

        build_url="https://potatgangcorp.fr/job/${JENKINS_JOB_NAME}/build"
        job_response=$(curl -s -X POST "$build_url" --user ${JENKINS_USER}:${JENKINS_PASSWORD} -H "Jenkins-Crumb:$crumb")
        echo "Job started: $job_response"

        sleep 10

        last_build_number=$(curl -s "https://potatgangcorp.fr/job/${JENKINS_JOB_NAME}/lastBuild/buildNumber" --user ${JENKINS_USER}:${JENKINS_PASSWORD})
        echo "Last build number: $last_build_number"

        check_build_status() {
          build_status=$(curl -s "https://potatgangcorp.fr/job/${JENKINS_JOB_NAME}/${1}/api/json" --user ${JENKINS_USER}:${JENKINS_PASSWORD} | jq -r '.result')
          echo "Build status: $build_status"
          echo $build_status
        }

        while true; do
          status=$(check_build_status $last_build_number)
          if [ "$status" == "SUCCESS" ]; then
            echo "Build succeeded."
            exit 0
          elif [ "$status" == "FAILURE" ]; then
            echo "Build failed."
            exit 1
          elif [ "$status" == "ABORTED" ]; then
            echo "Build was aborted."
            exit 1
          elif [ "$status" == "null" ]; then
            echo "Build is still running..."
          else
            echo "Unknown build status: $status"
            exit 1
          fi
          sleep 10
        done



    - name: Sync with Private Repository
      env:
        SSH_PRIVATE_KEY: ${{ secrets.POTAT_KEY }}
      run: |
        git config --global user.email "mathis.gheri@epitech.eu"
        git config --global user.name "MathisGheri"
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

        # Clone the private repo
        git clone --depth 1 git@github.com:Potat-Gang-Corp/Zappy.git private-repo

        # Ensure the destination directory exists
        mkdir -p private-repo/Graphic

        # Copy server files to the Server directory in the private repo
        rsync -av --delete --exclude '.git' --exclude 'private-repo' --exclude '.github' . private-repo/Graphic/

        cd private-repo
        git add Graphic/
        git commit -m "[+] Sync Graphic repository with the final one"
        git push origin main